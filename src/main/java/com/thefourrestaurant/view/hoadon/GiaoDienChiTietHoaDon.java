package com.thefourrestaurant.view.hoadon;

import com.thefourrestaurant.model.ChiTietHoaDon;
import com.thefourrestaurant.model.HoaDon;
import javafx.beans.property.SimpleStringProperty;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.control.Label;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;

import java.math.BigDecimal;
import java.time.format.DateTimeFormatter;
import java.util.HashMap;
import java.util.Map;

public class GiaoDienChiTietHoaDon extends VBox {

    // ===== Khai b√°o bi·∫øn instance =====
    private final Label lblSDT = new Label();
    private final Label lblGioNhan = new Label();
    private final Label lblTenKH = new Label();
    private final Label lblGioTra = new Label();
    private final TableView<ChiTietHoaDon> table = new TableView<>();
    private final Map<String, Label> thongTinPhu = new HashMap<>();

    public GiaoDienChiTietHoaDon() {
        setPadding(new Insets(20));
        setSpacing(10);
        setAlignment(Pos.CENTER);
        Label TieuDe = new Label("Th√¥ng Tin Chi Ti·∫øt H√≥a ƒê∆°n");
        TieuDe.setStyle("-fx-font-size: 24; -fx-text-fill: #DDB248; -fx-font-weight: bold;");


        // ==== Th√¥ng tin kh√°ch h√†ng / gi·ªù nh·∫≠n tr·∫£ ====
        getChildren().addAll(
                TieuDe,
                taoDongThongTin("SƒêT kh√°ch h√†ng:", lblSDT),
                taoDongThongTin("T√™n kh√°ch h√†ng:", lblTenKH),
                taoDongThongTin("Gi·ªù nh·∫≠n b√†n:", lblGioNhan)
        );

        // ==== Table chi ti·∫øt m√≥n ====
        table.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);
        table.setPrefHeight(200);

        TableColumn<ChiTietHoaDon, String> sttCol = new TableColumn<>("STT");
        sttCol.setCellValueFactory(cd ->
                new SimpleStringProperty(String.valueOf(table.getItems().indexOf(cd.getValue()) + 1))
        );

        TableColumn<ChiTietHoaDon, String> tenMonCol = new TableColumn<>("T√™n m√≥n");
        tenMonCol.setCellValueFactory(cd ->
                new SimpleStringProperty(cd.getValue().getMonAn().getTenMon())
        );

        TableColumn<ChiTietHoaDon, String> donGiaCol = new TableColumn<>("ƒê∆°n gi√°");
        donGiaCol.setCellValueFactory(cd ->
                new SimpleStringProperty(String.format("%,.0f ƒë", cd.getValue().getDonGia()))
        );


        TableColumn<ChiTietHoaDon, String> soLuongCol = new TableColumn<>("S·ªë l∆∞·ª£ng");
        soLuongCol.setCellValueFactory(cd ->
                new SimpleStringProperty(String.valueOf(cd.getValue().getSoLuong()))
        );

        TableColumn<ChiTietHoaDon, String> thanhTienCol = new TableColumn<>("Th√†nh ti·ªÅn");
        thanhTienCol.setCellValueFactory(cd -> {
            BigDecimal tt = cd.getValue().getDonGia()
                    .multiply(BigDecimal.valueOf(cd.getValue().getSoLuong()));
            return new SimpleStringProperty(String.format("%,.0f ƒë", tt));
        });

        table.getColumns().addAll(sttCol, tenMonCol, donGiaCol, soLuongCol, thanhTienCol);

        getChildren().add(table);

        // ==== Th√¥ng tin t·ªïng k·∫øt ====
        GridPane infoGrid = new GridPane();
        infoGrid.setHgap(10);
        infoGrid.setVgap(5);
        infoGrid.setPadding(new Insets(10, 0, 0, 0));

        String[] labels = {
                "M√£ gi·∫£m gi√°:", "Chi·∫øt kh·∫•u:", "Ti·ªÅn nh·∫≠n:", "Ti·ªÅn th·ª´a:",
                "Ti·ªÅn ƒë·∫∑t c·ªçc tr∆∞·ªõc:", "Thu·∫ø VAT:", "Ti·ªÅn thanh to√°n:"
        };

        for (int i = 0; i < labels.length; i++) {
            Label left = new Label(labels[i]);
            Label right = new Label();
            thongTinPhu.put(labels[i], right);
            infoGrid.add(left, 0, i);
            infoGrid.add(right, 1, i);
        }

        getChildren().add(infoGrid);
    }

    // ===== H√†m hi·ªÉn th·ªã th√¥ng tin h√≥a ƒë∆°n =====
    public void hienThiThongTin(HoaDon hd) {
        lblSDT.setText(hd.getKhachHang() != null ? hd.getKhachHang().getSoDT() : "");
        lblTenKH.setText(hd.getKhachHang() != null ? hd.getKhachHang().getHoTen() : "");
        lblGioNhan.setText(hd.getPhieuDatBan() != null && hd.getPhieuDatBan().getNgayDat() != null
                ? hd.getPhieuDatBan().getNgayDat().format(DateTimeFormatter.ofPattern("dd/MM/yyyy"))
                : "");
//        lblGioTra.setText(hd.getPhieuDatBan() != null && hd.getPhieuDatBan().getGioTra() != null
//                ? hd.getPhieuDatBan().getGioTra().format(DateTimeFormatter.ofPattern("HH:mm dd/MM/yyyy"))
//                : "");

        // Table chi ti·∫øt m√≥n
        table.getItems().setAll(hd.getChiTietHoaDon());

        // C√°c d√≤ng t·ªïng k·∫øt
        BigDecimal tongTien = hd.getTongTien();
        thongTinPhu.get("M√£ gi·∫£m gi√°:").setText(hd.getKhuyenMai() != null ? hd.getKhuyenMai().getMaKM() : "");
        if (hd.getKhuyenMai() != null && hd.getKhuyenMai().getLoaiKhuyenMai() != null) {
            String loai = hd.getKhuyenMai().getLoaiKhuyenMai().getTenLoaiKM();

            if (loai.equalsIgnoreCase("Gi·∫£m gi√° theo t·ª∑ l·ªá")) {
                thongTinPhu.get("Chi·∫øt kh·∫•u:").setText(hd.getKhuyenMai().getTyLe() + "%");
            } else if (loai.equalsIgnoreCase("Gi·∫£m gi√° theo s·ªë ti·ªÅn")) {
                thongTinPhu.get("Chi·∫øt kh·∫•u:").setText(String.format("%,.0f ƒë", hd.getKhuyenMai().getSoTien()));
            } else if (loai.equalsIgnoreCase("T·∫∑ng m√≥n")) {
                thongTinPhu.get("Chi·∫øt kh·∫•u:").setText("üéÅ T·∫∑ng m√≥n: " + hd.getKhuyenMai().getMoTa());
            }
        } else {
            thongTinPhu.get("Chi·∫øt kh·∫•u:").setText("Kh√¥ng √°p d·ª•ng");
        }
        thongTinPhu.get("Thu·∫ø VAT:").setText(hd.getThue() != null ? hd.getThue().getTyLe() + "%" : "0%");
        thongTinPhu.get("Ti·ªÅn nh·∫≠n:").setText(String.format("%,.0f ƒë", hd.getTienKhachDua()));
        thongTinPhu.get("Ti·ªÅn th·ª´a:").setText(String.format("%,.0f ƒë", hd.getTienThua()));
        thongTinPhu.get("Ti·ªÅn thanh to√°n:").setText(String.format("%,.0f ƒë", tongTien));
    }

    // ===== H√†m t·∫°o d√≤ng nh√£n + gi√° tr·ªã =====
    private HBox taoDongThongTin(String tieuDe, Label lblGiaTri) {
        Label lblTieuDe = new Label(tieuDe);
        lblTieuDe.setMinWidth(130);
        HBox box = new HBox(10, lblTieuDe, lblGiaTri);
        return box;
    }
}
